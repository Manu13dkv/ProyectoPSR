{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Planificaci\'F3n y Simulaci\'F3n de Redes }Planificaci\'F3n y Simulaci\'F3n de Redes}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo1\dy23\hr0\min8\sec45}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Planificaci\'F3n y Simulaci\'F3n de Redes}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mon Jan 23 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Object
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
EmuAdapter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Ipv4Router\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b EmuAdapter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Ipv4Router} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b emu_adapter.cc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b emu_adapter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b ipv4router.cc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b ipv4router.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b main.cc} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmuAdapter Class Reference\par \pard\plain 
{\tc\tcl2 \v EmuAdapter}
{\xe \v EmuAdapter}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\par
{
{\f2 #include <emu_adapter.h>}}\par
Inheritance diagram for EmuAdapter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_emu_adapter.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmuAdapter} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ptr< Node > {\b GetNode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b GetTapName} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ptr< NetDevice > {\b GetIface} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AttachTapDevice} (std::string tap_name, Ptr< NetDevice > iface)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static TypeId {\b GetTypeId} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 39} of file {\b emu_adapter.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v EmuAdapter\:EmuAdapter}
{\xe \v EmuAdapter\:EmuAdapter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EmuAdapter::EmuAdapter (void )}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b emu_adapter.cc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AttachTapDevice\:EmuAdapter}
{\xe \v EmuAdapter\:AttachTapDevice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EmuAdapter::AttachTapDevice (std::string  {\i tap_name}, Ptr< NetDevice >  {\i iface})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Attach a tap device to an {\b EmuAdapter}\par
}{
Definition at line {\b 83} of file {\b emu_adapter.cc}.}\par
}
{\xe \v GetIface\:EmuAdapter}
{\xe \v EmuAdapter\:GetIface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ptr< NetDevice > EmuAdapter::GetIface (void )}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to associated interface\par
}{
Definition at line {\b 74} of file {\b emu_adapter.cc}.}\par
}
{\xe \v GetNode\:EmuAdapter}
{\xe \v EmuAdapter\:GetNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ptr< Node > EmuAdapter::GetNode (void )}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to associated {\b EmuAdapter} Node\par
}{
Definition at line {\b 56} of file {\b emu_adapter.cc}.}\par
}
{\xe \v GetTapName\:EmuAdapter}
{\xe \v EmuAdapter\:GetTapName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string EmuAdapter::GetTapName (void )}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the TapName from the {\b EmuAdapter}\par
}{
Definition at line {\b 65} of file {\b emu_adapter.cc}.}\par
}
{\xe \v GetTypeId\:EmuAdapter}
{\xe \v EmuAdapter\:GetTypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TypeId EmuAdapter::GetTypeId (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtain the TypeId of the {\b EmuAdapter}\par
}{
Definition at line {\b 41} of file {\b emu_adapter.cc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b emu_adapter.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b emu_adapter.cc}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ipv4Router Class Reference\par \pard\plain 
{\tc\tcl2 \v Ipv4Router}
{\xe \v Ipv4Router}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\par
{
{\f2 #include <ipv4router.h>}}\par
Inheritance diagram for Ipv4Router:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_ipv4_router.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Ipv4Router} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NetDeviceContainer {\b GetIfaces} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ptr< CsmaNetDevice > {\b GetIface} (std::string iface_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ptr< CsmaNetDevice > {\b IfUp} (std::string iface_name, Ipv4Address ip, Ipv4Mask mask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Ptr< NetDevice > {\b Link} (Ptr< Node > guest, std::string iface_name, Ipv4Address guest_ip, Ipv4Mask guest_mask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DataRate {\b GetDataRate} (std::string iface_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetDataRate} (std::string iface_name, DataRate data_rate)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnablePcap} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetGlobalDataRate} (DataRate data_rate)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DataRate {\b GetGlobalDataRate} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static TypeId {\b GetTypeId} (void)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 33} of file {\b ipv4router.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Ipv4Router\:Ipv4Router}
{\xe \v Ipv4Router\:Ipv4Router}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ipv4Router::Ipv4Router (void )}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b ipv4router.cc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v EnablePcap\:Ipv4Router}
{\xe \v Ipv4Router\:EnablePcap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ipv4Router::EnablePcap (void )}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable Pcap traces\par
}{
Definition at line {\b 246} of file {\b ipv4router.cc}.}\par
}
{\xe \v GetDataRate\:Ipv4Router}
{\xe \v Ipv4Router\:GetDataRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DataRate Ipv4Router::GetDataRate (std::string  {\i iface_name})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtain the DateRate of an route interface\par
}{
Definition at line {\b 82} of file {\b ipv4router.cc}.}\par
}
{\xe \v GetGlobalDataRate\:Ipv4Router}
{\xe \v Ipv4Router\:GetGlobalDataRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DataRate Ipv4Router::GetGlobalDataRate ()}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return global DataRate from an expecific router\par
}{
Definition at line {\b 154} of file {\b ipv4router.cc}.}\par
}
{\xe \v GetIface\:Ipv4Router}
{\xe \v Ipv4Router\:GetIface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ptr< CsmaNetDevice > Ipv4Router::GetIface (std::string  {\i iface_name})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtain an interface\par
}{
Definition at line {\b 134} of file {\b ipv4router.cc}.}\par
}
{\xe \v GetIfaces\:Ipv4Router}
{\xe \v Ipv4Router\:GetIfaces}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NetDeviceContainer Ipv4Router::GetIfaces ()}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b ipv4router.cc}.}\par
}
{\xe \v GetTypeId\:Ipv4Router}
{\xe \v Ipv4Router\:GetTypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TypeId Ipv4Router::GetTypeId (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Obtain the TypeId from the {\b Ipv4Router}\par
}{
Definition at line {\b 41} of file {\b ipv4router.cc}.}\par
}
{\xe \v IfUp\:Ipv4Router}
{\xe \v Ipv4Router\:IfUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ptr< CsmaNetDevice > Ipv4Router::IfUp (std::string  {\i iface_name}, Ipv4Address  {\i ip}, Ipv4Mask  {\i mask})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set on a specific interface\par
}{
Definition at line {\b 163} of file {\b ipv4router.cc}.}\par
}
{\xe \v Link\:Ipv4Router}
{\xe \v Ipv4Router\:Link}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Ptr< NetDevice > Ipv4Router::Link (Ptr< Node >  {\i guest}, std::string  {\i iface_name}, Ipv4Address  {\i guest_ip}, Ipv4Mask  {\i guest_mask})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Link a CSMA device to the router\par
}{
Definition at line {\b 201} of file {\b ipv4router.cc}.}\par
}
{\xe \v SetDataRate\:Ipv4Router}
{\xe \v Ipv4Router\:SetDataRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ipv4Router::SetDataRate (std::string  {\i iface_name}, DataRate  {\i data_rate})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a DataRate to an interface from the router\par
}{
Definition at line {\b 57} of file {\b ipv4router.cc}.}\par
}
{\xe \v SetGlobalDataRate\:Ipv4Router}
{\xe \v Ipv4Router\:SetGlobalDataRate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Ipv4Router::SetGlobalDataRate (DataRate  {\i data_rate})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a DataRate to all the interface associated to a router\par
}{
Definition at line {\b 108} of file {\b ipv4router.cc}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b ipv4router.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/{\b ipv4router.cc}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.cc File Reference\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.cc}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.cc}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "emu_adapter.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NS_LOG_COMPONENT_DEFINE} ("EmuAdapter")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NS_OBJECT_ENSURE_REGISTERED} ({\b EmuAdapter})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v NS_LOG_COMPONENT_DEFINE\:emu_adapter.cc}
{\xe \v emu_adapter.cc\:NS_LOG_COMPONENT_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NS_LOG_COMPONENT_DEFINE ("EmuAdapter" )}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NS_OBJECT_ENSURE_REGISTERED\:emu_adapter.cc}
{\xe \v emu_adapter.cc\:NS_OBJECT_ENSURE_REGISTERED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NS_OBJECT_ENSURE_REGISTERED ({\b EmuAdapter} )}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
emu_adapter.cc\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.cc}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.cc}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     Planificaci\'F3n y simulaci\'F3n de redes 2022/2023}\par
00003 {\cf20 }\par
00004 {\cf20     Authors:}\par
00005 {\cf20         - Manuel Dom\'EDnguez Montero.}\par
00006 {\cf20         - Juan Manuel Alcal\'E1 Palomo.}\par
00007 {\cf20         - Ismael Garc\'EDa Mayorga.}\par
00008 {\cf20         - Julio Navarro V\'E1zquez}\par
00009 {\cf20 }\par
00010 {\cf20 */}\par
00011 \par
00012 {\cf20 // Own libraries}\par
00013 {\cf20 //=========================================}\par
00014 {\cf21 #include "emu_adapter.h"}\par
00015 \par
00016 {\cf20 // ns3 libraries.}\par
00017 {\cf20 //=========================================}\par
00018 \par
00019 {\cf20 // Standard libraries.}\par
00020 {\cf20 //=========================================}\par
00021 \par
00022 \par
00023 NS_LOG_COMPONENT_DEFINE({\cf22 "EmuAdapter"});\par
00024 \par
00025 {\cf17 using namespace }ns3;\par
00026 \par
00027 NS_OBJECT_ENSURE_REGISTERED (EmuAdapter);\par
00028 \par
00029 \par
00030 EmuAdapter:: \par
00031 EmuAdapter({\cf18 void})\{\par
00032 \par
00033     m_node = CreateObject<Node>();\par
00034 \par
00035     InternetStackHelper internetStackHelper;\par
00036     internetStackHelper.Install (m_node);\par
00037 \}\par
00038 \par
00039 \par
00040 TypeId\par
00041 EmuAdapter::GetTypeId({\cf18 void})\par
00042 \{\par
00043 \par
00045 \par
00046   {\cf17 static} TypeId tid = TypeId({\cf22 "ns3::EmuAdapter"})\par
00047     .SetParent<Object>()\par
00048     .SetGroupName({\cf22 "Network"})\par
00049     .AddConstructor<EmuAdapter>()\par
00050     ;\par
00051   {\cf19 return} tid;\par
00052 \}\par
00053 \par
00054 \par
00055 Ptr<Node>\par
00056 EmuAdapter::GetNode({\cf18 void})\{\par
00057 \par
00059 \par
00060     {\cf19 return} m_node; \par
00061 \}\par
00062 \par
00063 \par
00064 std::string\par
00065 EmuAdapter::GetTapName({\cf18 void})\{\par
00066 \par
00068 \par
00069     {\cf19 return} m_name; \par
00070 \}\par
00071 \par
00072 \par
00073 Ptr<NetDevice>\par
00074 EmuAdapter::GetIface({\cf18 void})\{\par
00075 \par
00077 \par
00078     {\cf19 return} m_iface; \par
00079 \}\par
00080 \par
00081 \par
00082 {\cf18 void}\par
00083 EmuAdapter::AttachTapDevice(std::string tap_name, Ptr<NetDevice> iface)\{\par
00084 \par
00086     \par
00087     TapBridgeHelper tap_helper;\par
00088     tap_helper.SetAttribute({\cf22 "Mode"}, StringValue({\cf22 "UseLocal"}));\par
00089     tap_helper.SetAttribute({\cf22 "DeviceName"}, StringValue(tap_name));\par
00090     \par
00091     m_iface = tap_helper.Install(m_node, iface);\par
00092 \}\par
00093 \par
00094 \par
00095 \par
00096 \par
00097 \par
00098 \par
00099 \par
00100 \par
00101 \par
00102 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.h File Reference\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.h}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ns3/abort.h"}\par
{\f2 #include "ns3/core-module.h"}\par
{\f2 #include "ns3/internet-module.h"}\par
{\f2 #include "ns3/network-module.h"}\par
{\f2 #include "ns3/fd-net-device-module.h"}\par
{\f2 #include "ns3/applications-module.h"}\par
{\f2 #include "ns3/ipv4-static-routing-helper.h"}\par
{\f2 #include "ns3/ipv4-list-routing-helper.h"}\par
{\f2 #include "ns3/csma-net-device.h"}\par
{\f2 #include "ns3/tap-bridge-module.h"}\par
{\f2 #include "ns3/csma-helper.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EmuAdapter}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
emu_adapter.h\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.h}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/emu_adapter.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     Planificaci\'F3n y simulaci\'F3n de redes 2022/2023}\par
00003 {\cf20 }\par
00004 {\cf20     Authors:}\par
00005 {\cf20         - Manuel Dom\'EDnguez Montero.}\par
00006 {\cf20         - Juan Manuel Alcal\'E1 Palomo.}\par
00007 {\cf20         - Ismael Garc\'EDa Mayorga.}\par
00008 {\cf20         - Julio Navarro V\'E1zquez}\par
00009 {\cf20 }\par
00010 {\cf20 */}\par
00011 \par
00012 {\cf20 // Own libraries}\par
00013 {\cf20 //=========================================}\par
00014 \par
00015 {\cf20 // ns3 libraries.}\par
00016 {\cf20 //=========================================}\par
00017 {\cf21 #include "ns3/abort.h"}\par
00018 {\cf21 #include "ns3/core-module.h"}\par
00019 {\cf21 #include "ns3/internet-module.h"}\par
00020 {\cf21 #include "ns3/network-module.h"}\par
00021 {\cf21 #include "ns3/fd-net-device-module.h"}\par
00022 {\cf21 #include "ns3/applications-module.h"}\par
00023 {\cf21 #include "ns3/ipv4-static-routing-helper.h"}\par
00024 {\cf21 #include "ns3/ipv4-list-routing-helper.h"}\par
00025 {\cf21 #include "ns3/csma-net-device.h"}\par
00026 {\cf21 #include "ns3/tap-bridge-module.h"}\par
00027 {\cf21 #include "ns3/csma-helper.h"}\par
00028 \par
00029 \par
00030 {\cf20 // Standard libraries.}\par
00031 {\cf20 //=========================================}\par
00032 \par
00033 {\cf20 // Constants.}\par
00034 {\cf20 //=========================================}\par
00035 \par
00036 \par
00037 {\cf17 using namespace }ns3;\par
00038 \par
00039 {\cf17 class }EmuAdapter : {\cf17 public} Object\par
00040 \{\par
00041 {\cf17 public}:\par
00042 \par
00043     EmuAdapter({\cf18 void});\par
00044 \par
00045     {\cf17 static} TypeId GetTypeId ({\cf18 void});\par
00046 \par
00047     Ptr<Node>       GetNode({\cf18 void});\par
00048     std::string     GetTapName({\cf18 void});\par
00049     Ptr<NetDevice>  GetIface({\cf18 void});\par
00050     {\cf18 void}  AttachTapDevice(std::string tap_name, Ptr<NetDevice> iface);\par
00051 \par
00052 {\cf17 private}:\par
00053 \par
00054     std::string m_name;\par
00055     Ptr<Node> m_node;\par
00056     Ptr<NetDevice> m_iface;\par
00057     \par
00058 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.cc File Reference\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.cc}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.cc}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ipv4router.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NS_LOG_COMPONENT_DEFINE} ("Ipv4Router")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NS_OBJECT_ENSURE_REGISTERED} ({\b Ipv4Router})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v NS_LOG_COMPONENT_DEFINE\:ipv4router.cc}
{\xe \v ipv4router.cc\:NS_LOG_COMPONENT_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NS_LOG_COMPONENT_DEFINE ("Ipv4Router" )}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NS_OBJECT_ENSURE_REGISTERED\:ipv4router.cc}
{\xe \v ipv4router.cc\:NS_OBJECT_ENSURE_REGISTERED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NS_OBJECT_ENSURE_REGISTERED ({\b Ipv4Router} )}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ipv4router.cc\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.cc}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.cc}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     Planificaci\'F3n y simulaci\'F3n de redes 2022/2023}\par
00003 {\cf20     Autores:}\par
00004 {\cf20         - Manuel Dom\'EDnguez Montero.}\par
00005 {\cf20         - Juan Manuel Alcal\'E1 Palomo.}\par
00006 {\cf20         - Ismael Garc\'EDa Mayorga.}\par
00007 {\cf20         - Julio Navarro V\'E1zquez}\par
00008 {\cf20 */}\par
00009 \par
00010 {\cf20 // Own libraries.}\par
00011 {\cf20 //=========================================}\par
00012 {\cf21 #include "ipv4router.h"}\par
00013 \par
00014 {\cf20 // ns3 libraries.}\par
00015 {\cf20 //=========================================}\par
00016 \par
00017 {\cf20 // Standard libraries.}\par
00018 {\cf20 //=========================================}\par
00019 \par
00020 \par
00021 NS_LOG_COMPONENT_DEFINE({\cf22 "Ipv4Router"});\par
00022 \par
00023 {\cf17 using namespace }ns3;\par
00024 \par
00025 NS_OBJECT_ENSURE_REGISTERED (Ipv4Router);\par
00026 \par
00027 Ipv4Router::\par
00028 Ipv4Router({\cf18 void})\par
00029 \{\par
00030   m_node = CreateObject<Node>();\par
00031   m_ifaces = NetDeviceContainer();\par
00032   m_gdata_rate = DataRate({\cf22 "100Mbps"});\par
00033   \par
00034   InternetStackHelper h_inetstack;\par
00035   h_inetstack.Install(m_node);\par
00036   \par
00037 \}\par
00038 \par
00039 \par
00040 TypeId\par
00041 Ipv4Router::GetTypeId({\cf18 void})\par
00042 \{\par
00043 \par
00045 \par
00046 \par
00047   {\cf17 static} TypeId tid = TypeId({\cf22 "ns3::IPv4Router"})\par
00048     .SetParent<Object>()\par
00049     .SetGroupName({\cf22 "Network"})\par
00050     .AddConstructor<Ipv4Router>()\par
00051     ;\par
00052   {\cf19 return} tid;\par
00053 \}\par
00054 \par
00055 \par
00056 {\cf18 void} \par
00057 Ipv4Router::SetDataRate(std::string iface_name, DataRate data_rate)\{\par
00058 \par
00059 \par
00061    \par
00062   Ptr<CsmaNetDevice> iface = GetIface(iface_name);\par
00063 \par
00064   {\cf19 if}(iface=={\cf17 nullptr})\{\par
00065     NS_LOG_ERROR(\par
00066       {\cf22 "The interface "}<<iface_name <<{\cf22 " does not exists, router id: "}<< m_node->GetId()\par
00067     );\par
00068   \}{\cf19 else}\{\par
00069     Ptr<CsmaChannel> channel = iface->GetChannel()->GetObject<CsmaChannel>();\par
00070     {\cf19 if}( channel == {\cf17 nullptr})\{\par
00071       NS_LOG_ERROR(\par
00072       {\cf22 "The interface "}<< iface_name <<{\cf22 " is disconnected to any channel, router id: "}<< m_node->GetId()\par
00073       );\par
00074     \}{\cf19 else}\{\par
00075       channel->SetAttribute({\cf22 "DataRate"}, DataRateValue(data_rate));\par
00076     \}\par
00077   \}\par
00078 \}\par
00079 \par
00080 \par
00081 DataRate\par
00082 Ipv4Router::GetDataRate(std::string iface_name)\{\par
00083 \par
00085 \par
00086   Ptr<CsmaNetDevice> iface = GetIface(iface_name);\par
00087   DataRate data_rate;\par
00088 \par
00089   {\cf19 if}(iface=={\cf17 nullptr})\{\par
00090     NS_LOG_ERROR(\par
00091       {\cf22 "The interface "}<<iface_name <<{\cf22 " does not exists, router id: "}<< m_node->GetId()\par
00092     );\par
00093   \}{\cf19 else}\{\par
00094     Ptr<CsmaChannel> channel = iface->GetChannel()->GetObject<CsmaChannel>();\par
00095     {\cf19 if}(channel == {\cf17 nullptr})\{\par
00096       NS_LOG_ERROR(\par
00097       {\cf22 "The interface "}<< iface_name <<{\cf22 " is disconnected to any channel, router id: "}<< m_node->GetId()\par
00098       );\par
00099     \}{\cf19 else}\{\par
00100       data_rate = channel->GetDataRate();\par
00101     \}\par
00102   \}\par
00103 \par
00104   {\cf19 return} data_rate;\par
00105 \}\par
00106 \par
00107 {\cf18 void}\par
00108 Ipv4Router::SetGlobalDataRate(DataRate data_rate)\{\par
00109 \par
00111   \par
00112   {\cf20 //Saving value for upcoming requests.}\par
00113   m_gdata_rate = data_rate;\par
00114   \par
00115   {\cf19 for} (uint32_t index = 0; index < m_ifaces.GetN(); index++)\par
00116   \{\par
00117     Ptr<CsmaChannel> channel = \par
00118     m_ifaces.Get(index)->GetChannel()->GetObject<CsmaChannel>();\par
00119 \par
00120     {\cf19 if}(channel != {\cf17 nullptr})\{\par
00121       channel->SetAttribute({\cf22 "DataRate"}, DataRateValue(m_gdata_rate));\par
00122     \}\par
00123   \}\par
00124 \}\par
00125 \par
00126 \par
00127 NetDeviceContainer \par
00128 Ipv4Router::GetIfaces()\{\par
00129   {\cf19 return} m_ifaces;\par
00130 \}\par
00131 \par
00132 \par
00133 Ptr<CsmaNetDevice>      \par
00134 Ipv4Router::GetIface(std::string iface_name)\{\par
00135 \par
00137   \par
00138   Ptr<CsmaNetDevice> iface = \par
00139   Names::Find<CsmaNetDevice>(\par
00140     std::to_string(m_node->GetId())+iface_name\par
00141   );\par
00142   \par
00143   {\cf19 if}(iface=={\cf17 nullptr})\{\par
00144     NS_LOG_DEBUG(\par
00145       {\cf22 "The interface "}<<iface_name <<{\cf22 " does not exists, router id: "}<< m_node->GetId()\par
00146     );\par
00147   \}\par
00148 \par
00149   {\cf19 return} iface;\par
00150 \}\par
00151 \par
00152 \par
00153 DataRate\par
00154 Ipv4Router::GetGlobalDataRate()\{\par
00155 \par
00157 \par
00158   {\cf19 return} m_gdata_rate;\par
00159 \}\par
00160 \par
00161 \par
00162 Ptr<CsmaNetDevice>    \par
00163 Ipv4Router::IfUp(std::string iface_name, Ipv4Address ip, Ipv4Mask mask)\{\par
00164 \par
00165 \par
00167   \par
00168   CsmaHelper csma;\par
00169   csma.SetChannelAttribute({\cf22 "DataRate"}, DataRateValue(m_gdata_rate));\par
00170 \par
00171   Ptr<CsmaNetDevice> iface = \par
00172   csma.Install(m_node).Get(0)->GetObject<CsmaNetDevice>();\par
00173   \par
00174   Ptr<Ipv4> ipv4 = m_node->GetObject<Ipv4>();\par
00175   uint32_t ip_index = ipv4->AddInterface(iface);\par
00176 \par
00177   ipv4->AddAddress(\par
00178           ip_index,\par
00179           Ipv4InterfaceAddress(ip, mask)\par
00180         );\par
00181 \par
00182   ipv4->SetUp(ip_index);\par
00183   \par
00184   ipv4->SetForwarding(\par
00185     ip_index,\par
00186     {\cf17 true}\par
00187   );\par
00188 \par
00189   Names::Add(std::to_string(m_node->GetId())+iface_name, iface);\par
00190   \par
00191   m_ifaces.Add(iface);\par
00192 \par
00193   {\cf19 return} iface;\par
00194 \}  \par
00195 \par
00196 {\cf20 /*}\par
00197 {\cf20   We pretend to emulate ppoE, therefore, any device wanted to be}\par
00198 {\cf20   linked to the router must be a CSMA like device. }\par
00199 {\cf20 */}\par
00200 Ptr<NetDevice>\par
00201 Ipv4Router::Link(Ptr<Node> guest, std::string iface_name, Ipv4Address guest_ip, Ipv4Mask guest_mask)\{\par
00202 \par
00204 \par
00205   Ptr<CsmaNetDevice> iface = GetIface(iface_name);\par
00206   Ptr<NetDevice> guest_iface;\par
00207 \par
00208   {\cf19 if}(iface=={\cf17 nullptr})\{\par
00209     NS_LOG_ERROR(\par
00210       {\cf22 "The interface "}<<iface_name <<{\cf22 " does not exists, router id: "}<< m_node->GetId()\par
00211     );\par
00212   \}{\cf19 else}\{\par
00213 \par
00214     CsmaHelper csma;\par
00215 \par
00216     guest_iface = csma.Install(\par
00217       guest,\par
00218       iface->GetChannel()->GetObject<CsmaChannel>()\par
00219     ).Get(0);\par
00220 \par
00221     Ptr<Ipv4> ipv4 = guest->GetObject<Ipv4>();\par
00222     uint32_t ip_index = ipv4->AddInterface(guest_iface);\par
00223 \par
00224     ipv4->AddAddress(\par
00225           ip_index,\par
00226           Ipv4InterfaceAddress(\par
00227             guest_ip,\par
00228             guest_mac\par
00229           )\par
00230     );\par
00231 \par
00232     ipv4->SetUp(ip_index);\par
00233   \par
00234     ipv4->SetForwarding(\par
00235         ip_index,\par
00236         {\cf17 true}\par
00237     );\par
00238 \par
00239   \}\par
00240 \par
00241   {\cf19 return} guest_iface;\par
00242 \}\par
00243 \par
00244 \par
00245 {\cf18 void}\par
00246 Ipv4Router::EnablePcap({\cf18 void})\{\par
00247 \par
00249 \par
00250   CsmaHelper csma;\par
00251 \par
00252   csma.EnablePcap(\par
00253     {\cf22 "router_traces"},\par
00254     m_ifaces,\par
00255     {\cf17 false}\par
00256   );\par
00257     \par
00258 \}\par
00259 \par
00260 \par
00261   \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.h File Reference\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.h}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ns3/core-module.h"}\par
{\f2 #include "ns3/ptr.h"}\par
{\f2 #include "ns3/net-device-container.h"}\par
{\f2 #include "ns3/csma-net-device.h"}\par
{\f2 #include "ns3/csma-helper.h"}\par
{\f2 #include "ns3/csma-channel.h"}\par
{\f2 #include "ns3/data-rate.h"}\par
{\f2 #include "ns3/ipv4-address.h"}\par
{\f2 #include "ns3/node.h"}\par
{\f2 #include "ns3/internet-stack-helper.h"}\par
{\f2 #include "ns3/ipv4-global-routing-helper.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Ipv4Router}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ipv4router.h\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.h}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/ipv4router.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     Planificaci\'F3n y simulaci\'F3n de redes 2022/2023}\par
00003 {\cf20     Autores:}\par
00004 {\cf20         - Manuel Dom\'EDnguez Montero.}\par
00005 {\cf20         - Juan Manuel Alcal\'E1 Palomo.}\par
00006 {\cf20         - Ismael Garc\'EDa Mayorga.}\par
00007 {\cf20         - Julio Navarro V\'E1zquez}\par
00008 {\cf20 */}\par
00009 \par
00010 {\cf20 // own libraries.}\par
00011 {\cf20 //=========================================}\par
00012 \par
00013 {\cf20 // ns3 libraries.}\par
00014 {\cf20 //=========================================}\par
00015 {\cf21 #include "ns3/core-module.h"}\par
00016 {\cf21 #include "ns3/ptr.h"}\par
00017 {\cf21 #include "ns3/net-device-container.h"}\par
00018 {\cf21 #include "ns3/csma-net-device.h"}\par
00019 {\cf21 #include "ns3/csma-helper.h"}\par
00020 {\cf21 #include "ns3/csma-channel.h"}\par
00021 {\cf21 #include "ns3/data-rate.h"}\par
00022 {\cf21 #include "ns3/ipv4-address.h"}\par
00023 {\cf21 #include "ns3/node.h"}\par
00024 {\cf21 #include "ns3/internet-stack-helper.h"}\par
00025 {\cf21 #include "ns3/ipv4-global-routing-helper.h"}\par
00026 \par
00027 {\cf20 // standard libraries.}\par
00028 {\cf20 //=========================================}\par
00029 \par
00030 \par
00031 {\cf17 using namespace }ns3;\par
00032 \par
00033 {\cf17 class }Ipv4Router : {\cf17 public} Object\par
00034 \{\par
00035 {\cf17 public}:\par
00036     Ipv4Router();\par
00037 \par
00038     {\cf17 static} TypeId GetTypeId ({\cf18 void});\par
00039 \par
00040     NetDeviceContainer      GetIfaces();\par
00041     Ptr<CsmaNetDevice>      GetIface(std::string iface_name);      \par
00042     Ptr<CsmaNetDevice>      IfUp(std::string iface_name, Ipv4Address ip, Ipv4Mask mask);\par
00043     Ptr<NetDevice>          Link(Ptr<Node> guest, std::string iface_name, Ipv4Address guest_ip, Ipv4Mask guest_mask);\par
00044     DataRate                GetDataRate(std::string iface_name);\par
00045     {\cf18 void}                    SetDataRate(std::string iface_name, DataRate data_rate);\par
00046     {\cf18 void}                    EnablePcap({\cf18 void});\par
00047 \par
00048     {\cf20 //Accessors.}\par
00049     {\cf18 void}                    SetGlobalDataRate(DataRate data_rate);\par
00050     DataRate                GetGlobalDataRate();\par
00051 \par
00052 {\cf17 private}:\par
00053     \par
00054     Ptr<Node> m_node;\par
00055     NetDeviceContainer m_ifaces;\par
00056     DataRate m_gdata_rate;\par
00057     \par
00058 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/main.cc File Reference\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/main.cc}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/main.cc}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "ipv4router.h"}\par
{\f2 #include "emu_adapter.h"}\par
{\f2 #include "ns3/core-module.h"}\par
{\f2 #include "ns3/ptr.h"}\par
{\f2 #include "ns3/internet-module.h"}\par
{\f2 #include "ns3/network-module.h"}\par
{\f2 #include "ns3/net-device-container.h"}\par
{\f2 #include "ns3/csma-net-device.h"}\par
{\f2 #include "ns3/csma-helper.h"}\par
{\f2 #include "ns3/csma-channel.h"}\par
{\f2 #include "ns3/data-rate.h"}\par
{\f2 #include "ns3/ipv4-address.h"}\par
{\f2 #include "ns3/node.h"}\par
{\f2 #include "ns3/internet-stack-helper.h"}\par
{\f2 #include "ns3/ipv4-global-routing-helper.h"}\par
{\f2 #include "ns3/ipv4-address-helper.h"}\par
{\f2 #include "ns3/command-line.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NS_LOG_COMPONENT_DEFINE} ("Main")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:main.cc}
{\xe \v main.cc\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b main.cc}.}\par
}
{\xe \v NS_LOG_COMPONENT_DEFINE\:main.cc}
{\xe \v main.cc\:NS_LOG_COMPONENT_DEFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NS_LOG_COMPONENT_DEFINE ("Main" )}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cc\par \pard\plain 
{\tc\tcl2 \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/main.cc}
{\xe \v Mio/psr/proyecto/ProyectoPSR-WorkingOn/src/cpp/main.cc}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20     Planificaci\'F3n y simulaci\'F3n de redes 2022/2023}\par
00003 {\cf20 }\par
00004 {\cf20     Authors:}\par
00005 {\cf20         - Manuel Dom\'EDnguez Montero.}\par
00006 {\cf20         - Juan Manuel Alcal\'E1 Palomo.}\par
00007 {\cf20         - Ismael Garc\'EDa Mayorga.}\par
00008 {\cf20         - Julio Navarro V\'E1zquez}\par
00009 {\cf20 }\par
00010 {\cf20 */}\par
00011 \par
00012 {\cf20 // Own libraries}\par
00013 {\cf20 //=========================================}\par
00014 {\cf21 #include "ipv4router.h"}\par
00015 {\cf21 #include "emu_adapter.h"}\par
00016 \par
00017 {\cf20 // ns3 libraries.}\par
00018 {\cf20 //=========================================}\par
00019 {\cf21 #include "ns3/core-module.h"}\par
00020 {\cf21 #include "ns3/ptr.h"}\par
00021 {\cf21 #include "ns3/core-module.h"}\par
00022 {\cf21 #include "ns3/internet-module.h"}\par
00023 {\cf21 #include "ns3/network-module.h"}\par
00024 \par
00025 {\cf21 #include "ns3/core-module.h"}\par
00026 {\cf21 #include "ns3/ptr.h"}\par
00027 {\cf21 #include "ns3/net-device-container.h"}\par
00028 {\cf21 #include "ns3/csma-net-device.h"}\par
00029 {\cf21 #include "ns3/csma-helper.h"}\par
00030 {\cf21 #include "ns3/csma-channel.h"}\par
00031 {\cf21 #include "ns3/data-rate.h"}\par
00032 {\cf21 #include "ns3/ipv4-address.h"}\par
00033 {\cf21 #include "ns3/node.h"}\par
00034 {\cf21 #include "ns3/internet-stack-helper.h"}\par
00035 {\cf21 #include "ns3/ipv4-global-routing-helper.h"}\par
00036 \par
00037 {\cf21 #include "ns3/ipv4-address-helper.h"}\par
00038 \par
00039 {\cf21 #include "ns3/command-line.h"}\par
00040 \par
00041 \par
00042 \par
00043 \par
00044 \par
00045 {\cf20 // Standard libraries.}\par
00046 {\cf20 //=========================================}\par
00047 \par
00048 \par
00049 {\cf17 using namespace }ns3;\par
00050 \par
00051 NS_LOG_COMPONENT_DEFINE({\cf22 "Main"});\par
00052 \par
00053 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\{\par
00054 \par
00055 \par
00056     GlobalValue::Bind ({\cf22 "SimulatorImplementationType"}, StringValue ({\cf22 "ns3::RealtimeSimulatorImpl"}));\par
00057     GlobalValue::Bind ({\cf22 "ChecksumEnabled"}, BooleanValue ({\cf17 true}));\par
00058 \par
00059     {\cf20 // Default Values.}\par
00060     {\cf20 //}\par
00061     {\cf20 // *_r (Raw) sufix to advise that the variable will be wrapped }\par
00062     {\cf20 // by an ns3 object, such as Time object to a double.}\par
00063     {\cf20 //  }\par
00064     {\cf20 //================================================================================}\par
00065     std::string sim_len_r = {\cf22 "3600s"};\par
00066     uint32_t n_nodes = 2;\par
00067     std::string base_ip_r = {\cf22 "10.1.1.0"};\par
00068     std::string base_mask_r = {\cf22 "255.255.255.0"};\par
00069     {\cf20 //================================================================================}\par
00070 \par
00071     CommandLine cmd(__FILE__);\par
00072 \par
00073     cmd.AddValue({\cf22 "sim_len"}, {\cf22 "Length of the simulation."}, sim_len_r);\par
00074     cmd.AddValue({\cf22 "n_nodes"}, {\cf22 "Number of real nodes to insert in the simulation."}, n_nodes);\par
00075 \par
00076     cmd.Parse(argc, argv);\par
00077 \par
00078     {\cf20 // Wrapping parameters.}\par
00079     {\cf20 //}\par
00080     {\cf20 //================================================================================}\par
00081     Time sim_len = Time(sim_len_r);\par
00082     Ipv4Address base_ip = Ipv4Address(base_ip_r.c_str());\par
00083     Ipv4Mask base_mask = Ipv4Mask(base_mask_r.c_str());\par
00084     {\cf20 //================================================================================}\par
00085 \par
00086     {\cf20 // Configuring scenario.}\par
00087     {\cf20 //================================================================================}\par
00088 \par
00089     Ipv4AddressHelper ip_helper;\par
00090     ip_helper.SetBase(base_ip, base_mask);\par
00091 \par
00092     Ptr<Ipv4Router> router = CreateObject<Ipv4Router>();\par
00093     uint32_t tap_index = 1;\par
00094 \par
00095     {\cf20 // Leave free eth0 to connect the management device.}\par
00096     {\cf19 for} ( uint32_t node = 1; node <= n_nodes; node++)\{\par
00097 \par
00098         router->IfUp(       \par
00099             {\cf22 "eth"}+std::to_string(node),    {\cf20 // --> eth1, eth2 ... }\par
00100             ip_helper.NewAddress(),\par
00101             base_mask\par
00102         );\par
00103      \par
00104         Ptr<EmuAdapter> tap = CreateObject<EmuAdapter>();\par
00105 \par
00106         Ptr<NetDevice> guest_iface = router->Link(\par
00107             tap->GetNode(),\par
00108             {\cf22 "eth"}+std::to_string(node),\par
00109             ip_helper.NewAddress(),\par
00110             base_mask\par
00111         );\par
00112 \par
00113         {\cf20 // When ns3 creates a tap device, then our system links it to a bridge }\par
00114         {\cf20 // and this to another tap device, hence if ns3 create tap1, our shell script will }\par
00115         {\cf20 // generate tap 2. Thus, the next tap in ns3 will be directly tap3. }\par
00116         tap->AttachTapDevice({\cf22 "tap"}+std::to_string(tap_index), guest_iface);\par
00117         tap_index+=2;\par
00118         ip_helper.NewNetwork();\par
00119     \}\par
00120     \par
00121     {\cf20 // Management device.}\par
00122     {\cf20 // Feel free to use it to manage the system from the host.}\par
00123     Ptr<EmuAdapter> management_tap = CreateObject<EmuAdapter>();\par
00124 \par
00125     router->IfUp(\par
00126         {\cf22 "eth0"},\par
00127         Ipv4Address({\cf22 "10.1.10.1"}),\par
00128         Ipv4Mask({\cf22 "255.255.255.0"})\par
00129     );\par
00130 \par
00131     Ptr<NetDevice> management_iface = router->Link(\par
00132         management_tap->GetNode(),\par
00133         {\cf22 "eth0"},\par
00134         Ipv4Address({\cf22 "10.1.10.2"}),\par
00135         Ipv4Mask({\cf22 "255.255.255.0"})\par
00136     );\par
00137 \par
00138     management_tap->AttachTapDevice({\cf22 "tap0"}, management_iface);\par
00139 \par
00140     {\cf20 // Global Config}\par
00141     {\cf20 //================================================================================}\par
00142     router->EnablePcap();\par
00143     Ipv4GlobalRoutingHelper::PopulateRoutingTables ();\par
00144 \par
00145 \par
00146     {\cf20 // Simulation}\par
00147     {\cf20 //================================================================================}\par
00148     NS_LOG_INFO ({\cf22 "Run Emulation."});\par
00149     Simulator::Stop (sim_len);\par
00150     Simulator::Run ();\par
00151     Simulator::Destroy ();\par
00152     NS_LOG_INFO ({\cf22 "Done."});\par
00153     \par
00154 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
